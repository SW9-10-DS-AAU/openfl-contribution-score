name: Python Build, Lint & Test

on:
  pull_request:
    branches: [main]


jobs:
  enforce-source-branch:
    runs-on: ubuntu-latest
    outputs:
      allowed: ${{ steps.check.outputs.allowed }}
    steps:
      - id: check
        run: |
          if [ "${{ github.head_ref }}" != "develop" ]; then
            echo "PR must come from 'develop' branch!"
            exit 1
          fi
          echo "allowed=true" >> $GITHUB_OUTPUT

  build:
    needs: enforce-source-branch
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Cache pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 5. Lint code with flake8
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .

      # 6. Check formatting with black
      - name: Check code formatting with black
        run: |
          pip install black
          black --check .

      # 7. Build package if applicable
      - name: Build package
        run: |
          if [ -f setup.py ]; then python setup.py build; fi
          if [ -f pyproject.toml ]; then python -m build; fi

      # 8. Import check
      - name: Import check
        run: python -c "import sys; import os; print('Python OK')"

      # 9. Run tests if folder exists
      - name: Run tests
        run: |
          if [ -f pytest.ini ] || [ -d tests ]; then pip install pytest && pytest; fi
